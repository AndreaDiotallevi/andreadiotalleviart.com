AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for andreadiotalleviart.com

Globals:
    Function:
        CodeUri: ./
        Timeout: 100
        Runtime: nodejs20.x
        MemorySize: 1024
        Tracing: Active
        Architectures:
            - x86_64

Resources:
    ApiGateway:
        Type: AWS::Serverless::Api
        Properties:
            StageName: Prod
            Auth:
                AddApiKeyRequiredToCorsPreflight: false
                ApiKeyRequired: true
                UsagePlan:
                    CreateUsagePlan: PER_API
                    Description: Usage plan for this API
            Cors:
                AllowMethods: "'*'"
                AllowHeaders: "'Content-Type, Authorization, X-Api-Key'"
                AllowOrigin: "'*'"

    # UsagePlan:
    #     Type: AWS::ApiGateway::UsagePlan
    #     Properties:
    #         UsagePlanName: UsagePlan
    #         ApiStages:
    #             - ApiId: !Ref ApiGateway
    #               Stage: Prod
    #         Quota:
    #             Limit: 1000
    #             Offset: 2
    #             Period: MONTH
    #         Throttle:
    #             BurstLimit: 5
    #             RateLimit: 2

    EventBus:
        Type: AWS::Events::EventBus
        Properties:
            Name: EventBus

    CreateCheckoutSessionFunction:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-CreateCheckoutSession
            Handler: src/handlers/createCheckoutSession.handler
            Events:
                Root:
                    Type: Api
                    Properties:
                        RestApiId: !Ref ApiGateway
                        Path: /create-checkout-session
                        Method: POST
            Policies:
                - Statement:
                      - Sid: readParameterStore
                        Effect: Allow
                        Action:
                            - ssm:GetParameter
                        Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/STRIPE_SECRET_KEY
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - src/handlers/createCheckoutSession.ts

    SendEmailFunction:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${AWS::StackName}-SendEmail
            Handler: src/handlers/sendEmail.handler
            Events:
                Root:
                    Type: Api
                    Properties:
                        RestApiId: !Ref ApiGateway
                        Path: /send-email
                        Method: POST
            Policies:
                - Statement:
                      - Sid: sendEmail
                        Effect: Allow
                        Action:
                            - ses:SendEmail
                        Resource: "*"
                - Statement:
                      - Sid: readParameterStore
                        Effect: Allow
                        Action:
                            - ssm:GetParameter
                        Resource:
                            - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/EMAIL_SOURCE
                            - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/EMAIL_DESTINATION
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - src/handlers/sendEmail.ts

    StripeWebhookFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        # DependsOn: WebhookSecretsManager
        Properties:
            FunctionName: Test
            # FunctionName: !Sub [
            #         "InboundWebhook-Lambda-${ID}",
            #         ID: !Select [2, !Split ["/", !Ref AWS::StackId]],
            #     ] # Append the stack UUID
            # CodeUri:
            #     Bucket: !Sub "eventbridge-inbound-webhook-templates-prod-${AWS::Region}"
            #     Key: "lambda-templates/stripe-lambdasrc.zip"
            Handler: src/handlers/stripeWebhook.handler
            # Environment:
            #     Variables:
            #         STRIPE_WEBHOOK_SECRET_ARN: !Ref WebhookSecretsManager
            #         EVENT_BUS_NAME: !Ref EventBusName
            FunctionUrlConfig:
                AuthType: NONE
            # Policies:
            #     - EventBridgePutEventsPolicy:
            #         EventBusName: !Ref EventBusName
            #     - Version: "2012-10-17"
            #     Statement:
            #         - Effect: Allow
            #             Action:
            #                 - secretsmanager:DescribeSecret
            #                 - secretsmanager:GetSecretValue
            #             Resource: !Ref WebhookSecretsManager
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - src/handlers/stripeWebhook.ts
