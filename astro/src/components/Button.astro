---
interface Props {
    id: string
    buttonText: string
    errorMessage?: string
    successMessage?: string
    variant?: "primary" | "secondary"
    additionalClass?: string
}

const {
    id,
    buttonText,
    errorMessage,
    successMessage,
    variant = "primary",
    additionalClass = "",
} = Astro.props
---

<button
    id={id}
    type="submit"
    class={`flex items-center justify-center w-full rounded-lg px-4 py-3 ${variant === "primary" ? "bg-gray-800 text-white md:hover:bg-gray-800" : "bg-white text-gray-800 md:hover:bg-gray-100 border border-gray-800"} transition-colors duration-300` +
        ` ${additionalClass}`}
>
    <svg
        id="loading-spinner"
        class={`mr-3 h-5 w-5 animate-spin ${variant === "primary" ? "text-white" : "text-gray-800"} hidden`}
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
    >
        <circle
            class="opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke={variant === "primary" ? "white" : "#1F2937"}
            stroke-width="4"></circle>
        <path
            fill={variant === "primary" ? "white" : "#1F2937"}
            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        ></path>
    </svg>

    <span id="button-text" class="font-semibold">{buttonText}</span>
</button>

<p
    id="error-message"
    class="hidden font-bold min-h-[48px] border border-rose-300 rounded-md bg-rose-100 text-rose-700 flex items-center px-4 py-2"
>
    {errorMessage}
</p>

<p
    id="success-message"
    class="hidden font-bold min-h-[48px] border border-emerald-300 rounded-md bg-emerald-100 text-emerald-700 flex items-center px-4 py-2"
>
    {successMessage}
</p>
