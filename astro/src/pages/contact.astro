---
import { Image } from "@unpic/astro"
import BaseLayout from "@layouts/BaseLayout.astro"
import Button from "@components/Button.astro"
import { imageBreakpoints } from "@utils/breakpoints"
import { transformImage } from "@utils/cloudinary"

const contactImageSrc = transformImage("contact-page-image_dczqrw")

Astro.response.headers.set(
    "cache-control",
    "public, max-age=0, must-revalidate"
)
Astro.response.headers.set(
    "netlify-cdn-cache-control",
    "public, durable, s-maxage=31536000"
)
---

<BaseLayout
    title="Contact | Andrea Diotallevi Art"
    description="Get in touch if you are interested in working together."
    image={contactImageSrc}
    tags={["Contact"]}
>
    <div
        class="flex flex-col md:flex-row items-center md:items-start px-4 py-8 pt-0 md:pt-8 max-w-screen-xl mx-auto text-gray-800"
    >
        <div class="w-full md:w-1/2 mb-6 md:mb-0 md:mr-8">
            <h1 class="text-2xl font-bold mb-4 md:hidden">Contact</h1>
            <Image
                src={contactImageSrc}
                alt="Contact Image"
                class="w-full h-auto rounded-lg"
                width={2000}
                height={2000}
                sizes="(max-width: 768px) 100vw, (max-width: 1280px) 50vw, 608px"
                breakpoints={imageBreakpoints({
                    maxWidth: 608,
                    assetWidth: 2000,
                })}
                loading="eager"
                fetchpriority="high"
            />
        </div>

        <div class="w-full md:w-1/2">
            <h1 class="text-5xl font-bold mb-6 hidden md:block">Contact</h1>
            <form id="contact-form" class="space-y-4">
                <div>
                    <label for="name" class="block text-lg font-medium mb-1"
                        >Name:</label
                    >
                    <input
                        id="name"
                        name="name"
                        type="text"
                        class="w-full px-3 py-3 border border-gray-800 rounded-md"
                        placeholder="Your Name"
                        autocomplete="name"
                        required
                    />
                </div>

                <div>
                    <label for="email" class="block text-lg font-medium mb-1"
                        >Email:</label
                    >
                    <input
                        id="email"
                        name="email"
                        type="email"
                        class="w-full px-3 py-3 border border-gray-800 rounded-md"
                        placeholder="Your Email"
                        autocomplete="email"
                        required
                    />
                </div>

                <div>
                    <label for="subject" class="block text-lg font-medium mb-1"
                        >Subject:</label
                    >
                    <input
                        id="subject"
                        name="subject"
                        type="text"
                        class="w-full px-3 py-3 border border-gray-800 rounded-md"
                        placeholder="Subject"
                        autocomplete="subject"
                        required
                    />
                </div>

                <div>
                    <label for="message" class="block text-lg font-medium mb-1"
                        >Message:</label
                    >
                    <textarea
                        id="message"
                        name="message"
                        class="w-full px-3 py-2 border border-gray-800 rounded-md"
                        rows="6"
                        placeholder="Your Message"
                        autocomplete="message"
                        required></textarea>
                </div>

                <Button
                    id="submit-button"
                    buttonText="Send message"
                    errorMessage="There was an error sending your message. Please try again."
                    successMessage="Message sent!"
                />
            </form>
        </div>
    </div>
</BaseLayout>

<script>
    document.addEventListener("astro:page-load", async () => {
        const contactForm = document.querySelector(
            "#contact-form"
        ) as HTMLFormElement

        if (!contactForm) return

        const button = contactForm.querySelector(
            "#submit-button"
        ) as HTMLButtonElement

        const spinner = contactForm.querySelector("#loading-spinner")!
        const errorMessage = contactForm.querySelector("#error-message")!
        const successMessage = contactForm.querySelector("#success-message")!

        contactForm.addEventListener("submit", async e => {
            e.preventDefault()

            button.disabled = true
            spinner.classList.remove("hidden")
            errorMessage.classList.add("hidden")
            successMessage.classList.add("hidden")

            const name = (
                contactForm.querySelector("#name") as HTMLInputElement
            ).value
            const email = (
                contactForm.querySelector("#email") as HTMLInputElement
            ).value
            const subject = (
                contactForm.querySelector("#subject") as HTMLInputElement
            ).value
            const message = (
                contactForm.querySelector("#message") as HTMLInputElement
            ).value

            try {
                await fetch(import.meta.env.PUBLIC_API_URL + `/messages`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ name, email, subject, message }),
                })

                successMessage.classList.remove("hidden")
                spinner.classList.add("hidden")
                button.disabled = false
                contactForm.reset()
            } catch (error) {
                console.error(error)
                errorMessage.classList.remove("hidden")
                spinner.classList.add("hidden")
                button.disabled = false
            }
        })
    })
</script>
