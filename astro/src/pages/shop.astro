---
export const prerender = false

import { Image } from "@unpic/astro"
import BaseLayout from "@layouts/BaseLayout.astro"
import { imageBreakpoints } from "@utils/breakpoints"
import { getStripeProducts } from "@utils/serverless"
import { combinedCountries, getLocalCurrency } from "@utils/currency"
import { formatCurrency } from "@utils/intl"

const products = await getStripeProducts()

if (
    import.meta.env.CONTEXT === "production" ||
    import.meta.env.CONTEXT === "staging"
) {
    console.log(Astro.url.href)
    console.log(JSON.stringify(Astro.locals.netlify.context.geo))
}

const currency = getLocalCurrency(
    Astro.locals.netlify.context.geo.country?.code
)

Astro.response.headers.set(
    "cache-control",
    "public, max-age=0, must-revalidate"
)
Astro.response.headers.set(
    "netlify-cdn-cache-control",
    "public, durable, s-maxage=31536000"
)
Astro.response.headers.set("netlify-vary", `country=${combinedCountries}`)
Astro.response.headers.set("netlify-cache-tag", "stripe")
---

<BaseLayout
    title="Shop | Giclée Fine Art Prints | Andrea Diotallevi Art"
    description="Museum quality fine art prints on premium cotton paper delivered with carbon-neutral free shipping."
    image={products[0] ? products[0].images[0] : undefined}
    tags={[
        "Generative art",
        "p5.js",
        "Processing",
        "Procedural",
        "Prints",
        "Fine art",
        "Giclee",
        "Hahnemühle photo rag",
        "Carbon neutral",
        "Free shipping",
    ]}
    newsletter={false}
>
    <div class="max-w-screen-xl mx-auto px-4 py-8 pt-0 md:pt-8">
        <div class="text-center mb-4 md:mb-6">
            <h1 class="text-2xl md:text-5xl font-bold mb-1 md:mb-2">Shop</h1>
            <h4 class="mx-auto text-sm md:text-base">
                Museum-quality prints on premium cotton paper delivered with
                free shipping
            </h4>
        </div>

        <div
            class="grid grid-cols-2 gap-x-4 gap-y-8 md:grid-cols-3 md:gap-x-8 md:gap-y-16"
        >
            {
                products
                    .sort(
                        (a, b) =>
                            parseInt(a.metadata.displayOrder) -
                            parseInt(b.metadata.displayOrder)
                    )
                    .map((product, index) => (
                        <a
                            href={`/shop/${product.metadata.category}/${product.metadata.slug}`}
                            class="flex flex-col no-underline text-black md:hover:opacity-70 transition-opacity duration-300"
                        >
                            <Image
                                alt={product.name}
                                src={product.images[0]}
                                width={1429}
                                height={2000}
                                sizes="(max-width: 1280px) 200vw, 100vw"
                                breakpoints={imageBreakpoints({
                                    maxWidth: 735,
                                    assetWidth: 1414,
                                })}
                                loading={index < 4 ? "eager" : "lazy"}
                                fetchpriority={index < 4 ? "high" : "low"}
                            />
                            <h2 class="font-bold md:text-2xl mt-2 md:mt-4">
                                {product.metadata.displayName}
                            </h2>
                           
                            <p class="font-bold md:mt-1">
                                {formatCurrency({
                                    value: product.default_price
                                        .currency_options[currency].unit_amount,
                                    currency,
                                })}
                            </p>
                        </a>
                    ))
            }
        </div>
    </div>
</BaseLayout>
