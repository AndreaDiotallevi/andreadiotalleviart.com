---
export const prerender = false

import { Image } from "@unpic/astro"
import BaseLayout from "@layouts/BaseLayout.astro"
import { getStripePrices } from "@utils/serverless"
import { combinedCountries, getLocalCurrency } from "@utils/currency"
import { formatCurrency } from "@utils/intl"

const prices = await getStripePrices()

console.log(Astro.url.href)
console.log(JSON.stringify(Astro.locals.netlify.context.geo))

const currency = getLocalCurrency(
    Astro.locals.netlify.context.geo.country?.code
)

Astro.response.headers.set(
    "cache-control",
    "public, max-age=0, must-revalidate"
)
Astro.response.headers.set(
    "netlify-cdn-cache-control",
    "public, durable, s-maxage=31536000"
)
Astro.response.headers.set("netlify-vary", `country=${combinedCountries}`)
Astro.response.headers.set("netlify-cache-tag", "stripe")
---

<BaseLayout
    title="Shop | Giclée Fine Art Prints | Andrea Diotallevi Art"
    description="Archival quality giclée generative art prints, on vegan certified Hahnemühle photo rag 308gsm matte paper, delivered in a cardboard tube with recycled plastic ends."
    image={prices[0].product.images[0]}
    tags={[
        "Generative Art",
        "p5.js",
        "Processing",
        "Procedural",
        "Prints",
        "Fine Art",
        "Giclee",
        "Hahnemühle photo rag",
    ]}
    newsletter={true}
>
    <div class="max-w-screen-xl mx-auto px-4 py-8 pt-0 md:pt-8">
        <div class="text-center mb-8">
            <h1 class="text-2xl md:text-5xl font-semibold mb-4 md:mb-6">
                Shop
            </h1>
            <p class="max-w-[600px] mx-auto">
                Museum quality fine art prints on premium 100% cotton paper with
                an organic feel, delivered with carbon-neutral free shipping
            </p>
        </div>

        <div class="grid grid-cols-2 gap-x-4 gap-y-8 md:gap-x-8 md:gap-y-16">
            {
                prices
                    .sort(
                        (a, b) =>
                            parseInt(a.product.metadata.displayOrder) -
                            parseInt(b.product.metadata.displayOrder)
                    )
                    .map(price => (
                        <a
                            href={`/shop/${price.product.metadata.category}/${price.product.metadata.slug}`}
                            class="flex flex-col no-underline text-black md:hover:opacity-70 transition-opacity duration-300"
                        >
                            <Image
                                alt={price.product.name}
                                src={price.product.images[0]}
                                width={734}
                                height={1038}
                                class="w-full h-auto object-contain"
                                loading="eager"
                                fetchpriority="high"
                            />
                            <h2 class="md:text-2xl font-semibold mt-4">
                                {`${price.product.metadata.displayName} (${price.product.metadata.size})`}
                            </h2>
                            <p class="md:text-lg md:mt-1">
                                {formatCurrency({
                                    value: price.currency_options[currency]
                                        .unit_amount,
                                    currency,
                                })}
                            </p>
                        </a>
                    ))
            }
        </div>
    </div>
</BaseLayout>
